name: Build Deploy Containers

on:

  # Publish packages on release
  release:
    types: [published]
  
  # Test on pull request
  pull_request: []

  # On push to main we build and deploy images
  push:
    branches:
    - main

jobs:
  build:
    permissions:
      packages: write

    # This is the container URI without a tag
    env:
      container: ghcr.io/rse-ops/flux-conda

    strategy:
      matrix:
        dockerfile: [[Dockerfile, "latest", ""], 
                     [Dockerfile.mamba, "mamba", ""],
                     [Dockerfile.mamba-env, "env", ""],
                     [Dockerfile.mamba-layer, "mamba-layer-focal", "--build-arg tag=focal"],
                     [Dockerfile.mamba-layer, "mamba-layer-bionic", "--build-arg tag=bionic"]]

    runs-on: ubuntu-latest
    name: Build
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build Regular Container
      env:
        dockerfile: ${{ matrix.dockerfile[0] }}
        flags: ${{ matrix.dockerfile[2] }}
        tag: ${{ matrix.dockerfile[1] }}
      run: docker build -f ${dockerfile} ${flags} -t ${{ env.container }}:${tag} .

    - name: GHCR Login
      if: (github.event_name != 'pull_request')
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag and Push Release Image
      if: (github.event_name == 'release')
      env:
        docker_tag: ${{ matrix.dockerfile[1] }}
      run: |        
        tag=${GITHUB_REF#refs/tags/}
        if [[ "${docker_tag}" != "latest" ]]; then
          echo "Tagging and releasing ${{ env.container }}:${docker_tag}-${tag}"
          docker tag ${{ env.container }}:${tag} ${{ env.container }}:${docker_tag}-${tag}
          docker push ${{ env.container }}:${docker_tag}-${tag}
        else
          echo "Tagging and releasing ${{ env.container }}:${tag}"
          docker tag ${{ env.container }}:latest ${{ env.container }}:${tag}
          docker push ${{ env.container }}:${tag}
        fi

    - name: Deploy
      if: (github.event_name != 'pull_request')
      env:
        tag: ${{ matrix.dockerfile[1] }}
      run: docker push ${{ env.container }}:${tag}
